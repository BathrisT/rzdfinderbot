from typing import Union

from aiogram import Router, F
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from aiogram.types.callback_query import CallbackQuery
from aiogram.types.message import Message

from keyboards.start import start_keyboard_without_subscription
from utils.add_messages_in_state_to_delete import add_messages_in_state_to_delete

router = Router()


@router.callback_query(F.data == 'start')  # TODO: –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
@router.message(Command('start'))  # TODO: –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
async def start_without_subscription(query: Union[Message, CallbackQuery], state: FSMContext):
    text = (
'''
üöÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –±–æ—Ç–µ –ø–æ –ø–æ–∏—Å–∫—É/–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—é –±–∏–ª–µ—Ç–æ–≤ –†–ñ–î

<b>üí´ –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã –Ω–∞ –º–∞—Ä—à—Ä—É—Ç—ã, –≥–¥–µ –≤—Å—ë —É–∂–µ —Ä–∞—Å–∫—É–ø–ª–µ–Ω–æ. –ö–∞–∫ —ç—Ç–æ —É—Å—Ç—Ä–æ–µ–Ω–æ:</b>

1. <b>–í—ã —Å–æ–∑–¥–∞–µ—Ç–µ –∑–∞—è–≤–∫—É</b>, –≤ –∫–æ—Ç–æ—Ä–æ–π —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ –º–∞—Ä—à—Ä—É—Ç –ø–æ–µ–∑–¥–∞, –¥–∞—Ç—É –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É
2. <b>–ú—ã —Å—Ä–∞–∑—É –∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç—Ç—É –∑–∞—è–≤–∫—É.</b> –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –±–æ—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–¥–∞–Ω–Ω—ã—Ö (–∏–ª–∏ –Ω–æ–≤—ã—Ö) –±–∏–ª–µ—Ç–æ–≤ –Ω–∞ –ø–æ–µ–∑–¥–∞ –ø–æ –≤–∞—à–µ–π –∑–∞—è–≤–∫–µ
3. <b>–í–∞–º –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ.</b> –¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –∑–∞–¥–∞—á–∞ –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∫—É–ø–∏—Ç—å –ø–æ—è–≤–∏–≤—à–µ–µ—Å—è –º–µ—Å—Ç–æ

–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ –≤ 100–†/–º–µ—Å—è—Ü –∏ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ
'''
    )
    sent_message = await query.bot.send_message(
        chat_id=query.from_user.id,
        text=text,
        parse_mode='HTML',
        reply_markup=start_keyboard_without_subscription(),
        disable_web_page_preview=True
    )
    await add_messages_in_state_to_delete(
        query=query,
        state=state,
        messages=[sent_message]
    )
