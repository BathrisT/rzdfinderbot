from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio.session import AsyncSession

from config import Config
from cruds.trackings import TrackingManager
from keyboards.trackings import start_create_ticket_from_scratch
from models.users import UserModel
from utils.add_messages_in_state_to_delete import add_messages_in_state_to_delete

# TODO: –ø–æ–≤–µ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä, —á—Ç–æ —á–µ–ª –æ–ø–ª–∞—Ç–∏–ª –ø–æ–¥–ø–∏—Å–∫—É
router = Router()


# TODO: —Ñ–∏–ª—å—Ç—Ä –Ω–∞ —Ç–æ, —á—Ç–æ —É —é–∑–µ—Ä–∞ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤ –±–¥
@router.callback_query(F.data == 'create_tracking')
async def start_create_tracking(
        callback: CallbackQuery,
        current_user: UserModel,
        state: FSMContext,
        config: Config,
        session: AsyncSession
):
    tracking_manager = TrackingManager(session=session)
    user_trackings = await tracking_manager.get_user_trackings(user_id=callback.from_user.id, only_active=False)

    #  TODO: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π. –ï—Å–ª–∏ —É–∂–µ –±–æ–ª—å—à–µ 10, —Ç–æ –Ω–µ–ª—å–∑—è

    text = (
        f"–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö, –∑–∞—Ç–µ–º –µ–≥–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å. "
        f"–ò–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É —Å–æ–æ–±—â–µ–Ω–∏—è. "
        f"<b>–í–æ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π</b>:\n\n"
        f"<i>‚ÑπÔ∏è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫</i>\n"
    )

    # –°—é–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–µ–∫–∏–Ω–≥–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ (from_city_id, to_city_id, max_price
    added_trackings = set()

    for tracking in user_trackings:
        current_tracking_tuple = (tracking.from_city_id, tracking.to_city_id, tracking.max_price)

        # –ï—Å–ª–∏ —ç—Ç–æ—Ç –º–∞—Ä—à—Ä—É—Ç —É–∂–µ –≤—ã–≤–æ–¥–∏–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
        if current_tracking_tuple in added_trackings:
            continue

        added_trackings.add(current_tracking_tuple)

        text += (
            '\n'
            f'<a href="https://t.me/{config.tg_bot.username}?start=tracking_copy_{tracking.id}">'
            f'üíæ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç {tracking.created_at.strftime("%d.%m.%Y")}: </a>\n'
            f'<b>–û—Ç–∫—É–¥–∞:</b> {tracking.from_city_name}\n'
            f'<b>–ö—É–¥–∞:</b> {tracking.to_city_name}\n'
        )
        if tracking.max_price:
            text += f'<b>–¶–µ–Ω–∞ –¥–æ:</b> {tracking.max_price}‚ÇΩ\n'

        if len(added_trackings) == 4:
            break

    sent_message = await callback.bot.send_message(
        chat_id=callback.from_user.id,
        text=text,
        parse_mode='HTML',
        reply_markup=start_create_ticket_from_scratch(),
        disable_web_page_preview=True
    )

    await add_messages_in_state_to_delete(
        query=callback,
        state=state,
        messages=[sent_message],
        delete_prev_messages=True
    )
